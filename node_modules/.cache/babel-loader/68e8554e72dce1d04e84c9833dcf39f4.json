{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\src\\\\components\\\\Search.js\";\nimport React from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.getSearchedBooks = function (ev) {\n      _this.setState({\n        query: ev.target.value\n      });\n\n      BooksAPI.search(_this.state.query.trim(), 20).then(function (books) {\n        books.length > 0 ? _this.setState({\n          searchedBooks: books\n        }) : _this.setState({\n          searchError: true\n        });\n      });\n    };\n\n    _this.state = {\n      searchedBooks: [],\n      query: \"\",\n      searchError: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          books = _this$props.books,\n          onChangeBookShelf = _this$props.onChangeBookShelf;\n      var searchedBooks = this.state.searchedBooks;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"query\",\n        value: this.state.query,\n        onChange: this.getSearchedBooks,\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, console.log(\"before render -->\", searchedBooks), searchedBooks.map(function (book, ind) {\n        return React.createElement(Book, {\n          key: ind,\n          book: book,\n          onChangeBookShelf: onChangeBookShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default Search;","map":{"version":3,"sources":["D:\\Udacity\\reactnd-project-myreads-starter\\src\\components\\Search.js"],"names":["React","BooksAPI","Link","Book","Search","props","getSearchedBooks","ev","setState","query","target","value","search","state","trim","then","books","length","searchedBooks","searchError","onChangeBookShelf","console","log","map","book","ind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAO,YAAP;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,M;;;;;AAEJ,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,gFAAMA,KAAN;;AADgB,UAWlBC,gBAXkB,GAWC,UAACC,EAAD,EAAQ;AACzB,YAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,EAAE,CAACG,MAAH,CAAUC;AADL,OAAd;;AAIAV,MAAAA,QAAQ,CAACW,MAAT,CAAgB,MAAKC,KAAL,CAAWJ,KAAX,CAAiBK,IAAjB,EAAhB,EAAyC,EAAzC,EACCC,IADD,CACM,UAACC,KAAD,EAAS;AAEbA,QAAAA,KAAK,CAACC,MAAN,GAAe,CAAf,GACE,MAAKT,QAAL,CAAc;AAAEU,UAAAA,aAAa,EAAEF;AAAjB,SAAd,CADF,GAEE,MAAKR,QAAL,CAAc;AAAEW,UAAAA,WAAW,EAAE;AAAf,SAAd,CAFF;AAID,OAPD;AASD,KAzBiB;;AAGhB,UAAKN,KAAL,GAAa;AACXK,MAAAA,aAAa,EAAE,EADJ;AAEXT,MAAAA,KAAK,EAAE,EAFI;AAGXU,MAAAA,WAAW,EAAE;AAHF,KAAb;AAHgB;AASjB;;;;6BAmBU;AAAA,wBAE8B,KAAKd,KAFnC;AAAA,UAECW,KAFD,eAECA,KAFD;AAAA,UAEQI,iBAFR,eAEQA,iBAFR;AAAA,UAGCF,aAHD,GAGmB,KAAKL,KAHxB,CAGCK,aAHD;AAKL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,EAAE,EAAC,GAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAME;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWJ,KAAlD;AAAyD,QAAA,QAAQ,EAAE,KAAKH,gBAAxE;AAA0F,QAAA,WAAW,EAAC,2BAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CANF,CADA,EAoBA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGe,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCJ,aAAhC,CADH,EAIMA,aAAa,CAACK,GAAd,CAAkB,UAACC,IAAD,EAAOC,GAAP;AAAA,eAChB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,GAAX;AAAgB,UAAA,IAAI,EAAED,IAAtB;AAA4B,UAAA,iBAAiB,EAAEJ,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB;AAAA,OAAlB,CAJN,CADF,CApBA,CADJ;AAmCH;;;;EAtEgBpB,KAAK,CAAC0B,S;;AA2E3B,eAAetB,MAAf","sourcesContent":["import React from 'react'\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport '../App.css'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\n\r\nclass Search extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchedBooks: [],\r\n      query: \"\",\r\n      searchError: false\r\n    }\r\n\r\n  }\r\n\r\n  getSearchedBooks = (ev) => {\r\n    this.setState({\r\n      query: ev.target.value\r\n    })\r\n\r\n    BooksAPI.search(this.state.query.trim(), 20)\r\n    .then((books)=>{\r\n\r\n      books.length > 0 \r\n      ? this.setState({ searchedBooks: books }) \r\n      : this.setState({ searchError: true })\r\n      \r\n    })\r\n\r\n  }\r\n\r\n\r\n    render() {\r\n\r\n      const { books, onChangeBookShelf } = this.props;\r\n      const { searchedBooks } = this.state;\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link\r\n                className='close-search'\r\n                to='/'>\r\n                Close\r\n              </Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                <input type=\"text\" name=\"query\" value={this.state.query} onChange={this.getSearchedBooks} placeholder=\"Search by title or author\"/>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                {console.log(\"before render -->\",searchedBooks)}\r\n\r\n                {\r\n                    searchedBooks.map((book, ind)=>(\r\n                      <Book key={ind} book={book} onChangeBookShelf={onChangeBookShelf} />\r\n                    ))\r\n                }\r\n\r\n              </ol>\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}