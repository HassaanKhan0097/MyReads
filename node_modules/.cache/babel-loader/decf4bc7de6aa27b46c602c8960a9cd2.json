{"ast":null,"code":"import _classCallCheck from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udacity\\\\reactnd-project-myreads-starter\\\\src\\\\components\\\\Search.js\";\nimport React from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.getBooks = function (event) {\n      var query = event.target.value;\n\n      _this.setState({\n        query: query\n      }); // if user input => run the search\n\n\n      if (query) {\n        BooksAPI.search(query.trim(), 20).then(function (books) {\n          books.length > 0 ? _this.setState({\n            searchedBooks: books,\n            searchErr: false\n          }) : _this.setState({\n            searchedBooks: [],\n            searchErr: true\n          });\n        }); // if query is empty => reset state to default\n      } else _this.setState({\n        searchedBooks: [],\n        searchErr: false\n      });\n    };\n\n    _this.state = {\n      searchedBooks: [],\n      query: \"\",\n      searchErr: false\n    };\n    return _this;\n  } // getSearchedBooks = (ev) => {\n  //   this.setState({\n  //     query: ev.target.value\n  //   })\n  //   BooksAPI.search(this.state.query.trim(), 20)\n  //   .then((books)=>{\n  //     books.length > 0 \n  //     ? this.setState({ searchedBooks: books }) \n  //     : this.setState({ searchError: true })\n  //   })\n  // }\n\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          books = _this$props.books,\n          onChangeBookShelf = _this$props.onChangeBookShelf;\n      var searchedBooks = this.state.searchedBooks;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"query\",\n        value: this.state.query,\n        onChange: this.getBooks,\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, console.log(\"before render -->\", searchedBooks), searchedBooks.map(function (book, ind) {\n        return React.createElement(Book, {\n          key: ind,\n          book: book,\n          onChangeBookShelf: onChangeBookShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default Search;","map":{"version":3,"sources":["D:\\Udacity\\reactnd-project-myreads-starter\\src\\components\\Search.js"],"names":["React","BooksAPI","Link","Book","Search","props","getBooks","event","query","target","value","setState","search","trim","then","books","length","searchedBooks","searchErr","state","onChangeBookShelf","console","log","map","book","ind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAO,YAAP;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,M;;;;;AAEJ,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,gFAAMA,KAAN;;AADgB,UA4BlBC,QA5BkB,GA4BP,UAAAC,KAAK,EAAI;AAClB,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;;AACA,YAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAALA;AAAF,OAAd,EAFkB,CAIlB;;;AACA,UAAIA,KAAJ,EAAW;AACTP,QAAAA,QAAQ,CAACW,MAAT,CAAgBJ,KAAK,CAACK,IAAN,EAAhB,EAA8B,EAA9B,EAAkCC,IAAlC,CAAuC,UAAAC,KAAK,EAAI;AAC9CA,UAAAA,KAAK,CAACC,MAAN,GAAe,CAAf,GACI,MAAKL,QAAL,CAAc;AAAEM,YAAAA,aAAa,EAAEF,KAAjB;AAAwBG,YAAAA,SAAS,EAAE;AAAnC,WAAd,CADJ,GAEI,MAAKP,QAAL,CAAc;AAAEM,YAAAA,aAAa,EAAE,EAAjB;AAAqBC,YAAAA,SAAS,EAAE;AAAhC,WAAd,CAFJ;AAGD,SAJD,EADS,CAOT;AACD,OARD,MAQO,MAAKP,QAAL,CAAc;AAAEM,QAAAA,aAAa,EAAE,EAAjB;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAd;AACR,KA1CiB;;AAGhB,UAAKC,KAAL,GAAa;AACXF,MAAAA,aAAa,EAAE,EADJ;AAEXT,MAAAA,KAAK,EAAE,EAFI;AAGXU,MAAAA,SAAS,EAAE;AAHA,KAAb;AAHgB;AASjB,G,CAED;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;;;6BAoBW;AAAA,wBAE8B,KAAKb,KAFnC;AAAA,UAECU,KAFD,eAECA,KAFD;AAAA,UAEQK,iBAFR,eAEQA,iBAFR;AAAA,UAGCH,aAHD,GAGmB,KAAKE,KAHxB,CAGCF,aAHD;AAKL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,EAAE,EAAC,GAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAME;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWX,KAAlD;AAAyD,QAAA,QAAQ,EAAE,KAAKF,QAAxE;AAAkF,QAAA,WAAW,EAAC,2BAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CANF,CADA,EAoBA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGe,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCL,aAAhC,CADH,EAIMA,aAAa,CAACM,GAAd,CAAkB,UAACC,IAAD,EAAOC,GAAP;AAAA,eAChB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,GAAX;AAAgB,UAAA,IAAI,EAAED,IAAtB;AAA4B,UAAA,iBAAiB,EAAEJ,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB;AAAA,OAAlB,CAJN,CADF,CApBA,CADJ;AAmCH;;;;EAvFgBpB,KAAK,CAAC0B,S;;AA4F3B,eAAetB,MAAf","sourcesContent":["import React from 'react'\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport '../App.css'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\n\r\nclass Search extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchedBooks: [],\r\n      query: \"\",\r\n      searchErr: false\r\n    }\r\n\r\n  }\r\n\r\n  // getSearchedBooks = (ev) => {\r\n  //   this.setState({\r\n  //     query: ev.target.value\r\n  //   })\r\n\r\n  //   BooksAPI.search(this.state.query.trim(), 20)\r\n  //   .then((books)=>{\r\n\r\n  //     books.length > 0 \r\n  //     ? this.setState({ searchedBooks: books }) \r\n  //     : this.setState({ searchError: true })\r\n      \r\n  //   })\r\n\r\n  // }\r\n\r\n\r\n  getBooks = event => {\r\n    const query = event.target.value;\r\n    this.setState({ query });\r\n\r\n    // if user input => run the search\r\n    if (query) {\r\n      BooksAPI.search(query.trim(), 20).then(books => {\r\n        books.length > 0\r\n          ? this.setState({ searchedBooks: books, searchErr: false })\r\n          : this.setState({ searchedBooks: [], searchErr: true });\r\n      });\r\n\r\n      // if query is empty => reset state to default\r\n    } else this.setState({ searchedBooks: [], searchErr: false });\r\n  };\r\n\r\n\r\n    render() {\r\n\r\n      const { books, onChangeBookShelf } = this.props;\r\n      const { searchedBooks } = this.state;\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link\r\n                className='close-search'\r\n                to='/'>\r\n                Close\r\n              </Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                <input type=\"text\" name=\"query\" value={this.state.query} onChange={this.getBooks} placeholder=\"Search by title or author\"/>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                {console.log(\"before render -->\",searchedBooks)}\r\n\r\n                {\r\n                    searchedBooks.map((book, ind)=>(\r\n                      <Book key={ind} book={book} onChangeBookShelf={onChangeBookShelf} />\r\n                    ))\r\n                }\r\n\r\n              </ol>\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}